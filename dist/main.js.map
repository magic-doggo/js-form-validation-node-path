{"version":3,"file":"main.js","mappings":"mBAYA,QAZA,WACI,MAAMA,EAAc,CAAC,oDAAqD,0CACpEC,EAAQC,SAASC,eAAe,SACnB,IAAIC,OAAOJ,EAAY,GAAI,IAC/BK,KAAKJ,EAAMK,OACtBL,EAAMM,kBAAkB,IAGxBN,EAAMM,kBAAkBP,EAAY,GAE5C,ECiBA,EA3BA,WACI,MAAMA,EAAc,CAChBQ,GAAI,CACA,WACA,oCAEJC,GAAI,CACA,gBACA,iEAEJC,IAAK,CACD,WACA,qCAGFC,EAAUT,SAASC,eAAe,WAAWG,MAC7CM,EAAWV,SAASC,eAAe,WAEtB,IAAIC,OAAOJ,EAAYW,GAAS,GAAI,IAExCN,KAAKO,EAASN,OACzBM,EAASL,kBAAkB,IAE3BK,EAASL,kBAAkBP,EAAYW,GAAS,GAExD,ECIA,EA7BA,WACI,MAAME,EAAWX,SAASC,eAAe,YACnCW,EAAiBZ,SAASC,eAAe,mBACzCH,EAAc,CAAC,QAAS,4CACxBe,EAAa,IAAIX,OAAOJ,EAAY,GAAI,IAC9CgB,QAAQC,IAAIF,EAAWV,KAAKQ,EAASP,QACjCO,EAASP,QAAUQ,EAAeR,OAASS,EAAWV,KAAKQ,EAASP,QACpEQ,EAAeP,kBAAkB,IACjCM,EAASN,kBAAkB,KACpBM,EAASP,OAASQ,EAAeR,OACxCU,QAAQC,IAAI,qBACZH,EAAeP,kBAAkB,+BACjCM,EAASN,kBAAkB,gCACnBQ,EAAWV,KAAKQ,EAASP,OAGzBS,EAAWV,KAAKS,EAAeR,OAKvCO,EAASN,kBAAkB,0CAJ3BS,QAAQC,IAAI,0BACZH,EAAeP,kBAAkBP,EAAY,MAJ7CgB,QAAQC,IAAI,sBACZJ,EAASN,kBAAkBP,EAAY,KAW3CgB,QAAQC,IAAIJ,EAASP,MAAOQ,EAAeR,MAC/C,ECtBAY,OAAOC,OAAS,KACZjB,SAASC,eAAe,SAASiB,QAAU,EAC3ClB,SAASC,eAAe,WAAWiB,QAAU,EAC7ClB,SAASC,eAAe,mBAAmBiB,QAAU,EACrDlB,SAASC,eAAe,YAAYiB,QAAU,CAAc,C","sources":["webpack://js-form-validation-node-path/./src/checkEmail.js","webpack://js-form-validation-node-path/./src/checkZip.js","webpack://js-form-validation-node-path/./src/checkPasswords.js","webpack://js-form-validation-node-path/./src/index.js"],"sourcesContent":["function checkEmail() {\n    const constraints = [\"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}$\", 'email must use format \"alex@alex.alex\"'];\n    const email = document.getElementById(\"email\");\n    const constraint = new RegExp(constraints[0], \"\");\n    if (constraint.test(email.value)) {\n        email.setCustomValidity(\"\");\n    }\n    else {\n        email.setCustomValidity(constraints[1])\n    }\n}\n\nexport default checkEmail;","function checkZip() {\n    const constraints = {\n        ro: [\n            \"^\\\\d{6}$\",\n            \"Romanian ZIPs must have 6 digits\"\n        ],\n        fr: [\n            \"^(F-)?\\\\d{5}$\",\n            \"France ZIPs must have exactly 5 digits: e.g. F-75012 or 75012\"\n        ],\n        est: [\n            \"^\\\\d{5}$\",\n            \"Estonian ZIPs must have 5 digits\"\n        ]\n    };\n    const country = document.getElementById(\"country\").value;\n    const ZIPField = document.getElementById(\"zipcode\");\n\n    const constraint = new RegExp(constraints[country][0], \"\");\n\n    if (constraint.test(ZIPField.value)){\n        ZIPField.setCustomValidity(\"\");\n    } else {\n        ZIPField.setCustomValidity(constraints[country][1]);\n    }\n}\n\nexport default checkZip;","function checkPasswords() {\n    const password = document.getElementById(\"password\");\n    const repeatPassword = document.getElementById(\"repeat-password\");\n    const constraints = [\".{5,}\", \"Password must have at least 5 characters\"];\n    const constraint = new RegExp(constraints[0], \"\");\n    console.log(constraint.test(password.value))\n    if (password.value === repeatPassword.value && constraint.test(password.value)) {\n        repeatPassword.setCustomValidity(\"\");\n        password.setCustomValidity(\"\");\n    } else if (password.value != repeatPassword.value) {\n        console.log(\"pass aint matchin\")\n        repeatPassword.setCustomValidity(\"The passwords do not match!\");\n        password.setCustomValidity(\"The passwords do not match!\");\n    } else if (!constraint.test(password.value)) {\n        console.log(\"password too short\")\n        password.setCustomValidity(constraints[1]);\n    } else if (!constraint.test(repeatPassword.value)) {\n        console.log(\"repeat passw too short\")\n        repeatPassword.setCustomValidity(constraints[1]);\n    }\n    else {\n        password.setCustomValidity(\"You should not be seeing this error?!\")\n    }\n    \n\n\n    console.log(password.value, repeatPassword.value)\n}\n\nexport default checkPasswords;","\nimport checkEmail from \"/src/checkEmail.js\";\nimport checkZip from \"./checkZip\";\nimport checkPasswords from \"./checkPasswords\";\n\nwindow.onload = () => {\n    document.getElementById(\"email\").oninput = checkEmail;\n    document.getElementById(\"zipcode\").oninput = checkZip;\n    document.getElementById(\"repeat-password\").oninput = checkPasswords;\n    document.getElementById(\"password\").oninput = checkPasswords;\n}\n"],"names":["constraints","email","document","getElementById","RegExp","test","value","setCustomValidity","ro","fr","est","country","ZIPField","password","repeatPassword","constraint","console","log","window","onload","oninput"],"sourceRoot":""}